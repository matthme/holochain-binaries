name: "release-lair-binaries"
on:
  workflow_call:
    inputs:
      lair-version:
        required: true
        type: string
      x86_64-pc-windows-msvc:
        required: false
        default: true
        type: boolean
      aarch64-apple-darwin:
        required: false
        default: true
        type: boolean
      x86_64-apple-darwin:
        required: false
        default: true
        type: boolean
      x86_64-unknown-linux-gnu:
        required: false
        default: true
        type: boolean
      aarch64-unknown-linux-gnu:
        required: false
        default: true
        type: boolean
  workflow_dispatch:
    inputs:
      lair-version:
        required: true
        type: string
      x86_64-pc-windows-msvc:
        required: false
        default: false
        type: boolean
      aarch64-apple-darwin:
        required: false
        default: false
        type: boolean
      x86_64-apple-darwin:
        required: false
        default: false
        type: boolean
      x86_64-unknown-linux-gnu:
        required: false
        default: false
        type: boolean
      aarch64-unknown-linux-gnu:
        required: false
        default: false
        type: boolean

jobs:
  publish-lair-binaries:
    strategy:
      fail-fast: false
      matrix:
        platform:
          [windows-2022, macos-latest, macos-13, ubuntu-22.04, ubuntu-22.04-arm]
    permissions:
      contents: write
    runs-on: ${{ matrix.platform }}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # Checks out a copy of your repository on the ubuntu-latest machine
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - id: create-release
        uses: ncipollo/release-action@v1
        with:
          body: "Lair binaries for Linux/Windows/macOS."
          prerelease: true
          skipIfReleaseExists: true
          tag: lair-binaries-${{ inputs.lair-version }}

      - name: install Rust
        uses: dtolnay/rust-toolchain@1.87.0

      - name: setup binaries (x86_64-pc-windows-msvc)
        if: matrix.platform == 'windows-2022' && inputs.x86_64-pc-windows-msvc == true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cargo install lair_keystore --version ${{ inputs.lair-version }} --locked
          $LkPath = Get-Command lair-keystore | Select-Object -ExpandProperty Definition
          Copy-Item $LkPath -Destination "lair-keystore-v${{ inputs.lair-version }}-x86_64-pc-windows-msvc.exe"
          CertUtil -hashfile "lair-keystore-v${{ inputs.lair-version }}-x86_64-pc-windows-msvc.exe" SHA256
          gh release upload "lair-binaries-${{ inputs.lair-version }}" "lair-keystore-v${{ inputs.lair-version }}-x86_64-pc-windows-msvc.exe"

      - name: setup binaries (aarch64-apple-darwin)
        if: matrix.platform == 'macos-latest' && inputs.aarch64-apple-darwin == true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          rustup target add aarch64-apple-darwin

          cargo install lair_keystore --version ${{ inputs.lair-version }} --target aarch64-apple-darwin --locked
          LAIR_PATH=$(which lair-keystore)
          cp $LAIR_PATH lair-keystore-v${{ inputs.lair-version }}-aarch64-apple-darwin
          shasum -a 256 lair-keystore-v${{ inputs.lair-version }}-aarch64-apple-darwin
          gh release upload "lair-binaries-${{ inputs.lair-version }}" "lair-keystore-v${{ inputs.lair-version }}-aarch64-apple-darwin"

      - name: setup binaries (x86_64-apple-darwin)
        if: matrix.platform == 'macos-13' && inputs.x86_64-apple-darwin == true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          rustup target add x86_64-apple-darwin

          cargo install lair_keystore --version ${{ inputs.lair-version }} --target x86_64-apple-darwin --locked
          LAIR_PATH=$(which lair-keystore)
          cp $LAIR_PATH lair-keystore-v${{ inputs.lair-version }}-x86_64-apple-darwin
          shasum -a 256 lair-keystore-v${{ inputs.lair-version }}-x86_64-apple-darwin
          gh release upload "lair-binaries-${{ inputs.lair-version }}" "lair-keystore-v${{ inputs.lair-version }}-x86_64-apple-darwin"

      - name: setup binaries (x86_64-unknown-linux-gnu)
        if: matrix.platform == 'ubuntu-22.04' && inputs.x86_64-unknown-linux-gnu == true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cargo install lair_keystore --version ${{ inputs.lair-version }} --locked
          LAIR_PATH=$(which lair-keystore)
          cp $LAIR_PATH lair-keystore-v${{ inputs.lair-version }}-x86_64-unknown-linux-gnu
          shasum -a 256 lair-keystore-v${{ inputs.lair-version }}-x86_64-unknown-linux-gnu
          gh release upload "lair-binaries-${{ inputs.lair-version }}" "lair-keystore-v${{ inputs.lair-version }}-x86_64-unknown-linux-gnu"

      - name: setup binaries (aarch64-unknown-linux-gnu)
        if: matrix.platform == 'ubuntu-22.04-arm' && inputs.aarch64-unknown-linux-gnu == true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cargo install lair_keystore --version ${{ inputs.lair-version }} --locked
          LAIR_PATH=$(which lair-keystore)
          cp $LAIR_PATH lair-keystore-v${{ inputs.lair-version }}-aarch64-unknown-linux-gnu
          shasum -a 256 lair-keystore-v${{ inputs.lair-version }}-aarch64-unknown-linux-gnu
          gh release upload "lair-binaries-${{ inputs.lair-version }}" "lair-keystore-v${{ inputs.lair-version }}-aarch64-unknown-linux-gnu"
